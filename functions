# Functions for bashrc and bash_profile
# Behold my laziness

if [ -e $DOTFILES/sourceautomation ]; then
    source $DOTFILES/sourceautomation 
fi

# Git branch for prompt
parse_git_branch()
{
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Restart an application $1
restart()
{
    pkill $1 && open -a $1
}

# Run ls and pipe output to grep
f()
{
    ls | grep $1
}

# Run history and pipe output to grep
h()
{
    history | grep $1
}

# Docker exec bash
ds()
{
    docker exec -it $1 bash
}

# Default ngrok use case
# Example
# ng 80 m2-test.nathaniel.dev.bolt.me
ng()
{
    cd ~
    ./ngrok http $1 --hostname=$2
    cd -
}

# Rsync magento files for docker container
# Leaving docker container as a parameter even though it's probably always the same
dockrsync()
{
    docker exec -it $1 rsync -avh --exclude 'vendor' project/ magento/app/code/Bolt/Boltpay --delete
}

# Specifically m2_php
m2phpsync()
{
    dockrsync m2_php
}

# Update m2 local...lite
# This can be used for things that don't require re-compilation.
# TODO: Parameter flag this instead
m2u()
{
    cd /Applications/MAMP/htdocs/magento2
    composer update boltpay/bolt-magento2
    php bin/magento cache:clean
    php bin/magento cache:flush
    cd -
}

# Update m2 local
m2update()
{
    cd /Applications/MAMP/htdocs/magento2

    echo "Update composer..."
    composer update boltpay/bolt-magento2 

    echo "setup:upgrade..."
    php bin/magento setup:upgrade 

    echo "setup:di:compile..."
    php bin/magento setup:di:compile 

    echo "setup:static-content:deploy -f..."
    php bin/magento setup:static-content:deploy -f 

    echo "cache:clean..."
    php bin/magento cache:clean 

    echo "cache:flush..."
    php bin/magento cache:flush 
    cd -
}

# Add all changed files to git unless path specified
function ga()
{
    if [[ $# -eq 0 ]]; then
        git add *
    else
        git add $1
    fi

    git status
}

function fancyga()
{
    git add $1:-*
    git status
}
